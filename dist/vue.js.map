{"version":3,"file":"vue.js","sources":["../src/util.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isObject(obj){\r\n    // 使用typeof 这里可以将array判断为object；\r\n    return typeof obj === 'object' && obj !== null;\r\n}","\r\n// 我们重写数组方法的目的是：当用户使用部分数组方法操作数据的时候，对需要加以观测的数据进行观测。\r\n// 所以: 1. 不能直接更改数组原型，影响其他Array的使用。\r\n//       2. 重写后的数组，还可以拿到数组所有的方法。\r\n\r\nlet oldArrayMethods = Array.prototype; // 获取数组原型上的方法。\r\n\r\n// 创建一个全新的对象(__proto__指向数组的原型) 可以找到数组原型上所有的方法, 而且修改对象不会影响\r\n// 数组原型方法\r\n\r\nexport let arrayMethods = Object.create(oldArrayMethods);\r\n\r\nlet methods = [ // 这七个方法都会改变原数组， 不改变原数组，我们没必要重写（对数据不产生影响）\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'sort',\r\n    'reverse',\r\n    'splice'\r\n];\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function(...args){ // 函数劫持 AOP的思想\r\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\r\n        const ob = this.__ob__;\r\n        let result = oldArrayMethods[method].apply(this,args);\r\n        let inserted;\r\n        console.log('劫持',args)\r\n        // push unshift splice 都可以新增属性 （新增的属性可能是一个对象）,对这种对象Vue,也做了观测\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2); // splice第三个参数开始才是新增的\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n\r\n        inserted && ob.observeArray(inserted);\r\n\r\n        return result;\r\n\r\n    }\r\n})\r\n\r\n","import {isObject} from '../util.js';\r\nimport {arrayMethods} from './array';\r\n\r\nexport class Observer{\r\n    constructor(data){\r\n        // __ob__ 是数据响应式的标识， 对象和数组都有， 存在则说明该数据已经被观测， 可以作为判断\r\n        Object.defineProperty(data,'__ob__',{\r\n            enumerable: false, // 表示不可枚举\r\n            configurable: false, // 表示不可配置， 不可以改\r\n            value: this\r\n        })\r\n        //data.__ob__ = this; 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例,死循环的问题\r\n\r\n        if(Array.isArray(data)){\r\n            // 需要对数组进行特殊处理， 因为我们使用数组一般都是进行列表渲染， 很少用 arr[1] = xxx的情况\r\n            // 不做特殊处理的话， 就会对数组每一项都添加递归添加get set。对大型数据，很影响性能。\r\n\r\n            // 以检索的方式直接更改数据监测不到，Vue放弃检测以索引的方式的改动， 采用 \"函数劫持\" 的方式重写数组的方法。\r\n\r\n            data.__proto__ = arrayMethods; // 改写数组类型的原型链，指向重写的方法。\r\n\r\n            // Vue中可以监测到 [{a:1}] ===> [][0].a = 2 这种情况，简单的说， 数组的中的对象也是可以被监测到的\r\n\r\n            this.observeArray(data);\r\n\r\n        }else{\r\n            this.walk(data);// 对数据每一项都添加get set， 一步步处理\r\n        }\r\n\r\n    }\r\n\r\n    observeArray(data){\r\n        for( let i = 0; i < data.length ; i++){\r\n            observe(data[i]);\r\n        }\r\n    }\r\n\r\n    walk(data){\r\n        // 不要用 for in ，因为会对原型遍历\r\n        Object.keys(data).forEach((key) => {\r\n            defineReactive(data,key,data[key]);\r\n        })\r\n    }\r\n}\r\n\r\n// 这里需要注意的是， 并没有改变被defineProperty重写对象的引用地址，所以重写后\r\n// 还是原来的关系拼接。\r\n// 这也是Vue2.0的性能问题， 递归重写get set， Vue3.0使用proxy\r\nfunction defineReactive(data,key,value){\r\n    observe(value); // 如果传入的值还是一个对象，就做递归循环检测\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            return value;\r\n        },\r\n        set(newValue){\r\n            if(value === newValue) return;\r\n            observe(newValue); // 用户设置的值也可能是引用类型，也需要检测\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n    // 如果传入的数据是 非obj 或者 null时直接返回， 这么判断是基于初始是一个对象或者数组\r\n    // 基本数据类型被上一层引用数据类型使用defineProperty改写， 添加了get set\r\n    if(!isObject(data)){\r\n        return;\r\n    }\r\n    // 使用defineProperty进行重写\r\n    return new Observer(data);\r\n}\r\n","import { observe,Observer } from './observer/index';\r\nexport function initState(vm){\r\n    const opts = vm.$options;\r\n    if(opts.props){\r\n        initProps(vm);\r\n    }\r\n    if(opts.methods){\r\n        initMethods(vm);\r\n    }\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction initProps(){};\r\nfunction initMethods(){};\r\n// 代理\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm){\r\n    // 数据响应式原理\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n    if(data.__ob__ instanceof Observer){ // 防止数据被多次观测\r\n        return ;\r\n    }\r\n    // 将属性代理到实例上\r\n    for(let key in data){\r\n        proxy(vm,'_data',key);\r\n    }\r\n\r\n    // 观察数据\r\n    observe(data);\r\n};\r\n","// 以字母a-zA-Z_开头  - . 数组小写字母 大写字母任意多个  \r\n// 后续要放进RegExp构造器中，是个字符串， 所以使用两个 '/'\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\n\r\n\r\n// ?:匹配不捕获   <aaa:aaa>\r\n\r\n// 正则子表达式 ： 子表达式是一个大的表达式的一部分， 把一个表达式划分为多个子表达式的目的是为了把那些子表达式当做一个独立的\r\n// 元素来使用。 子表达式必须使用 （） 括起来。\r\n\r\n// 字符串的 str.match(reg) 方法用于在字符串内检索指定的值，或者找到一个或者多个正则表达式的匹配\r\n// 返回值 能匹配到返回一个存放匹配结果的数组 不能匹配到则返回null\r\n// 能匹配到还分为两种情况 ：\r\n// 1. 没有g。 该数组的第 0 个元素存放的是匹配文本，而其余的元素存放的是与正则表达式的子表达式匹配的文本。\r\n//   除了这些常规的数组元素之外，返回的数组还含有两个对象属性。index 属性声明的是匹配文本的起始字符在 stringObject 中的位置，\r\n//  input 属性声明的是对 stringObject 的引用。\r\n// 2. 有g。 如果找到了一个或多个匹配子串，则返回一个数组。不过全局匹配返回的数组的内容与前者大不相同，它的数组元素中存放的是 stringObject 中所有的匹配子串，\r\n//   而且也没有 index 属性或 input 属性。\r\n\r\n\r\n// 解释 ：?:表示匹配不捕获 。 <aaa:aaa 的结果如下\r\n// 1. 加?: ===> [\"<aaa:aaa\", \"aaa:aaa\", index: 0, input: \"<aaa:aaa\", groups: undefined]\r\n// 2. 不加 ?: ===> [\"<aaa:aaa\", \"aaa:aaa\", \"aaa:\", index: 0, input: \"<aaa:aaa\", groups: undefined]\r\n\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxxxxxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa   =   \"123\"  bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div >   <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\n\r\n// 将模板变为ast语法树\r\n// 1. 从字符串中读取数据，使用字符串从左到右（使用这个方向的原因是正则上做了限制）逐步截取\r\n// 2. 组装树\r\nexport function parserHTML(html){\r\n    // <div id=\"app\" style=\"color:red\"><span>nnnn{{age}}</span>wwwww<p></p></div>\r\n\r\n    let root; // 根\r\n    let currentParent = null; // 指当前解析的变量是谁\r\n    let stack = []; // 建立栈结构，用于判断标签是否正常闭合\r\n\r\n\r\n    function createASTElement(tagname,attrs){\r\n        return {\r\n            tag: tagname,\r\n            attrs,\r\n            children:[],\r\n            parent:null,\r\n            type:1 // 表示节点类型 1为html元素节点 3为文本节点\r\n        }\r\n    }\r\n\r\n    function start(tagname,attrs){\r\n        let element = createASTElement(tagname,attrs);\r\n\r\n        if(!root){\r\n            root = element;\r\n        }\r\n\r\n        currentParent = element;\r\n        stack.push(element);\r\n    }\r\n    function end(tagname){\r\n        // 在结束时确立父子关系\r\n        let element = stack.pop(); // 拿到当前元素\r\n        let parent = stack[stack.length - 1];\r\n        // 需要对单标签进行特殊处理，目前没有处理\r\n        // if(tagname !== element.tag){\r\n        //     throw new Error('标签闭合错误')\r\n        // }\r\n        if(parent){\r\n            element.parent = parent;\r\n            parent.children.push(element)\r\n        }\r\n    }\r\n    function chars(text){\r\n        text = text.replace(/\\s/g,''); // 去掉空格排除全是空格的文本节点\r\n        if(text){\r\n            currentParent.children.push({\r\n                type:3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    // 循环解析标签\r\n    while(html){\r\n        let textEnd = html.indexOf('<');\r\n        if(textEnd === 0){\r\n            const startTagMatch = parserStartTag();\r\n\r\n            if(startTagMatch){\r\n                start(startTagMatch.tagname,startTagMatch.attrs);\r\n            }\r\n\r\n            const endTagMatch = html.match(endTag);\r\n\r\n            if(endTagMatch){\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1]);\r\n            }\r\n        }\r\n        // 如果不是0则说明是文本\r\n        let text;\r\n        if(textEnd > 0){\r\n            text = html.substring(0,textEnd); // 文本截取\r\n        }\r\n\r\n        if(text){\r\n            advance(text.length); // 删除文本\r\n            chars(text)\r\n        }\r\n    }\r\n\r\n    function advance(n){\r\n        html = html.substring(n);\r\n    }\r\n    // 解析标签开头\r\n    function parserStartTag(){\r\n        const start = html.match(startTagOpen);\r\n        if(start){\r\n            const match = {\r\n                tagname: start[1],\r\n                attrs: []\r\n            }\r\n\r\n            advance(start[0].length);\r\n            let end,attr;\r\n            // 循环解析属性\r\n            while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\r\n                advance(attr[0].length)\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n                // [\" style=\"color:red\"\", \"style\", \"=\", \"color:red\", undefined, undefined, index: 0, input: \" style=\"color:red\"><span>nnnn{{age}}</span>wwwww<p></p></div>\", groups: undefined]\r\n                // console.log(attr)\r\n            }\r\n            if(end){\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n}\r\n\r\n","import { parserHTML } from './parser';\r\nexport function compileToFunctions(template){\r\n    \r\n    let ast = parserHTML(template); // 将模板变为ast语法树\r\n    console.log(ast)\r\n}","import {initState} from './state';\r\nimport { compileToFunctions } from './compiler/index';\r\nexport function initMixin(Vue){\r\n    Vue.prototype._init = function(options){\r\n        // Vue的内部 $options 就是用户传递的所有参数\r\n        const vm = this;\r\n        vm.$options = options;\r\n        // 初始化状态\r\n        initState(vm);\r\n\r\n        if(vm.$options.el){\r\n            this.$mount(vm.$options.el);\r\n        }\r\n    };\r\n\r\n    Vue.prototype.$mount = function(el){\r\n        el = document.querySelector(el);\r\n        const vm = this;\r\n        const opts = vm.$options;\r\n\r\n        if(!opts.render){\r\n            let template = opts.template;\r\n            if(!template && el){\r\n                template = el.outerHTML;//包含innerHTML的全部内容外, 还包含对象标签本身 s是个字符串\r\n            }\r\n\r\n            const render = compileToFunctions(template); // 表示将模板编译为render函数\r\n\r\n            opts.render = render;\r\n        }\r\n\r\n        //opts.render();\r\n        \r\n    }\r\n}","import { initMixin } from './init';\r\nfunction Vue(options){\r\n    // 一个Vue实例生成，最先要做初始化操作；\r\n    this._init(options); // 整个项目的初始化\r\n}\r\n// 给Vue的原型链上混入初始化方法\r\ninitMixin(Vue);\r\n\r\n\r\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","console","log","slice","observeArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","proxy","source","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","root","currentParent","stack","createASTElement","tagname","attrs","tag","children","parent","type","start","element","push","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parserStartTag","endTagMatch","match","advance","substring","n","attr","name","compileToFunctions","template","ast","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,QAAT,CAAkBC,GAAlB,EAAsB;EACzB;EACA,SAAO,QAAOA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACH;;ECFD;EACA;EACA;EAEA,IAAIC,eAAe,GAAGC,KAAK,CAACC,SAA5B;EAEA;EACA;;EAEO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,eAAd,CAAnB;EAEP,IAAIM,OAAO,GAAG;EACV,MADU,EAEV,KAFU,EAGV,OAHU,EAIV,SAJU,EAKV,MALU,EAMV,SANU,EAOV,QAPU,CAAd;EAUAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,MAAM,EAAI;EACtBL,EAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,YAAiB;EAAE;EACtC;EACA,QAAMC,EAAE,GAAG,KAAKC,MAAhB;;EAFoC,sCAALC,IAAK;EAALA,MAAAA,IAAK;EAAA;;EAGpC,QAAIC,MAAM,GAAGZ,eAAe,CAACQ,MAAD,CAAf,CAAwBK,KAAxB,CAA8B,IAA9B,EAAmCF,IAAnC,CAAb;EACA,QAAIG,QAAJ;EACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBL,IAAjB,EALoC;;EAOpC,YAAOH,MAAP;EACI,WAAK,MAAL;EACA,WAAK,SAAL;EACIM,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACJ,WAAK,QAAL;EACIG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX,CADJ;;EAEI;EAPR;EAYAH,IAAAA,QAAQ,IAAIL,EAAE,CAACS,YAAH,CAAgBJ,QAAhB,CAAZ;EAEA,WAAOF,MAAP;EAEH,GAvBD;EAwBH,CAzBD;;MCnBaO,QAAb;EACI,oBAAYC,IAAZ,EAAiB;EAAA;;EACb;EACAhB,IAAAA,MAAM,CAACiB,cAAP,CAAsBD,IAAtB,EAA2B,QAA3B,EAAoC;EAChCE,MAAAA,UAAU,EAAE,KADoB;EACb;EACnBC,MAAAA,YAAY,EAAE,KAFkB;EAEX;EACrBC,MAAAA,KAAK,EAAE;EAHyB,KAApC,EAFa;;EASb,QAAGvB,KAAK,CAACwB,OAAN,CAAcL,IAAd,CAAH,EAAuB;EACnB;EACA;EAEA;EAEAA,MAAAA,IAAI,CAACM,SAAL,GAAiBvB,YAAjB,CANmB;EAQnB;;EAEA,WAAKe,YAAL,CAAkBE,IAAlB;EAEH,KAZD,MAYK;EACD,WAAKO,IAAL,CAAUP,IAAV,EADC;EAEJ;EAEJ;;EA1BL;EAAA;EAAA,iCA4BiBA,IA5BjB,EA4BsB;EACd,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAkCD,CAAC,EAAnC,EAAsC;EAClCE,QAAAA,OAAO,CAACV,IAAI,CAACQ,CAAD,CAAL,CAAP;EACH;EACJ;EAhCL;EAAA;EAAA,yBAkCSR,IAlCT,EAkCc;EACN;EACAhB,MAAAA,MAAM,CAAC2B,IAAP,CAAYX,IAAZ,EAAkBb,OAAlB,CAA0B,UAACyB,GAAD,EAAS;EAC/BC,QAAAA,cAAc,CAACb,IAAD,EAAMY,GAAN,EAAUZ,IAAI,CAACY,GAAD,CAAd,CAAd;EACH,OAFD;EAGH;EAvCL;;EAAA;EAAA;EA2CA;EACA;;EACA,SAASC,cAAT,CAAwBb,IAAxB,EAA6BY,GAA7B,EAAiCR,KAAjC,EAAuC;EACnCM,EAAAA,OAAO,CAACN,KAAD,CAAP,CADmC;;EAEnCpB,EAAAA,MAAM,CAACiB,cAAP,CAAsBD,IAAtB,EAA2BY,GAA3B,EAA+B;EAC3BE,IAAAA,GAD2B,iBACtB;EACD,aAAOV,KAAP;EACH,KAH0B;EAI3BW,IAAAA,GAJ2B,eAIvBC,QAJuB,EAId;EACT,UAAGZ,KAAK,KAAKY,QAAb,EAAuB;EACvBN,MAAAA,OAAO,CAACM,QAAD,CAAP,CAFS;;EAGTZ,MAAAA,KAAK,GAAGY,QAAR;EACH;EAR0B,GAA/B;EAUH;;EAEM,SAASN,OAAT,CAAiBV,IAAjB,EAAsB;EACzB;EACA;EACA,MAAG,CAACtB,QAAQ,CAACsB,IAAD,CAAZ,EAAmB;EACf;EACH,GALwB;;;EAOzB,SAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP;EACH;;ECrEM,SAASiB,SAAT,CAAmBC,EAAnB,EAAsB;EACzB,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EACA,MAAGD,IAAI,CAACE,KAAR,EAAc;;EAGd,MAAGF,IAAI,CAACjC,OAAR,EAAgB;;EAGhB,MAAGiC,IAAI,CAACnB,IAAR,EAAa;EACTsB,IAAAA,QAAQ,CAACJ,EAAD,CAAR;EACH;EACJ;;EAKD,SAASK,KAAT,CAAeL,EAAf,EAAkBM,MAAlB,EAAyBZ,GAAzB,EAA6B;EACzB5B,EAAAA,MAAM,CAACiB,cAAP,CAAsBiB,EAAtB,EAAyBN,GAAzB,EAA6B;EACzBE,IAAAA,GADyB,iBACpB;EACD,aAAOI,EAAE,CAACM,MAAD,CAAF,CAAWZ,GAAX,CAAP;EACH,KAHwB;EAIzBG,IAAAA,GAJyB,eAIrBC,QAJqB,EAIZ;EACTE,MAAAA,EAAE,CAACM,MAAD,CAAF,CAAWZ,GAAX,IAAkBI,QAAlB;EACH;EANwB,GAA7B;EAQH;;EAED,SAASM,QAAT,CAAkBJ,EAAlB,EAAqB;EACjB;EACA,MAAIlB,IAAI,GAAGkB,EAAE,CAACE,QAAH,CAAYpB,IAAvB;EACAA,EAAAA,IAAI,GAAGkB,EAAE,CAACO,KAAH,GAAW,OAAOzB,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC0B,IAAL,CAAUR,EAAV,CAA7B,GAA6ClB,IAA/D;;EAEA,MAAGA,IAAI,CAACV,MAAL,YAAuBS,QAA1B,EAAmC;EAAE;EACjC;EACH,GAPgB;;;EASjB,OAAI,IAAIa,GAAR,IAAeZ,IAAf,EAAoB;EAChBuB,IAAAA,KAAK,CAACL,EAAD,EAAI,OAAJ,EAAYN,GAAZ,CAAL;EACH,GAXgB;;;EAcjBF,EAAAA,OAAO,CAACV,IAAD,CAAP;EACH;;EC3CD;EACA;EACA,IAAM2B,MAAM,iCAAZ;EAGA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;;EAEA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EAEA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;EACA;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;EACA;EACA;;EACA,IAAMI,SAAS,GAAG,2EAAlB;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB;EAOA;EACA;;EACO,SAASC,UAAT,CAAoBC,IAApB,EAAyB;EAC5B;EAEA,MAAIC,IAAJ,CAH4B;;EAI5B,MAAIC,aAAa,GAAG,IAApB,CAJ4B;;EAK5B,MAAIC,KAAK,GAAG,EAAZ,CAL4B;;EAQ5B,WAASC,gBAAT,CAA0BC,OAA1B,EAAkCC,KAAlC,EAAwC;EACpC,WAAO;EACHC,MAAAA,GAAG,EAAEF,OADF;EAEHC,MAAAA,KAAK,EAALA,KAFG;EAGHE,MAAAA,QAAQ,EAAC,EAHN;EAIHC,MAAAA,MAAM,EAAC,IAJJ;EAKHC,MAAAA,IAAI,EAAC,CALF;;EAAA,KAAP;EAOH;;EAED,WAASC,KAAT,CAAeN,OAAf,EAAuBC,KAAvB,EAA6B;EACzB,QAAIM,OAAO,GAAGR,gBAAgB,CAACC,OAAD,EAASC,KAAT,CAA9B;;EAEA,QAAG,CAACL,IAAJ,EAAS;EACLA,MAAAA,IAAI,GAAGW,OAAP;EACH;;EAEDV,IAAAA,aAAa,GAAGU,OAAhB;EACAT,IAAAA,KAAK,CAACU,IAAN,CAAWD,OAAX;EACH;;EACD,WAASE,GAAT,CAAaT,OAAb,EAAqB;EACjB;EACA,QAAIO,OAAO,GAAGT,KAAK,CAACY,GAAN,EAAd,CAFiB;;EAGjB,QAAIN,MAAM,GAAGN,KAAK,CAACA,KAAK,CAAC7B,MAAN,GAAe,CAAhB,CAAlB,CAHiB;EAKjB;EACA;EACA;;EACA,QAAGmC,MAAH,EAAU;EACNG,MAAAA,OAAO,CAACH,MAAR,GAAiBA,MAAjB;EACAA,MAAAA,MAAM,CAACD,QAAP,CAAgBK,IAAhB,CAAqBD,OAArB;EACH;EACJ;;EACD,WAASI,KAAT,CAAeC,IAAf,EAAoB;EAChBA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAmB,EAAnB,CAAP,CADgB;;EAEhB,QAAGD,IAAH,EAAQ;EACJf,MAAAA,aAAa,CAACM,QAAd,CAAuBK,IAAvB,CAA4B;EACxBH,QAAAA,IAAI,EAAC,CADmB;EAExBO,QAAAA,IAAI,EAAJA;EAFwB,OAA5B;EAIH;EACJ,GAjD2B;;;EAmD5B,SAAMjB,IAAN,EAAW;EACP,QAAImB,OAAO,GAAGnB,IAAI,CAACoB,OAAL,CAAa,GAAb,CAAd;;EACA,QAAGD,OAAO,KAAK,CAAf,EAAiB;EACb,UAAME,aAAa,GAAGC,cAAc,EAApC;;EAEA,UAAGD,aAAH,EAAiB;EACbV,QAAAA,KAAK,CAACU,aAAa,CAAChB,OAAf,EAAuBgB,aAAa,CAACf,KAArC,CAAL;EACH;;EAED,UAAMiB,WAAW,GAAGvB,IAAI,CAACwB,KAAL,CAAW5B,MAAX,CAApB;;EAEA,UAAG2B,WAAH,EAAe;EACXE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAejD,MAAhB,CAAP;EACAwC,QAAAA,GAAG,CAACS,WAAW,CAAC,CAAD,CAAZ,CAAH;EACH;EACJ,KAfM;;;EAiBP,QAAIN,IAAI,SAAR;;EACA,QAAGE,OAAO,GAAG,CAAb,EAAe;EACXF,MAAAA,IAAI,GAAGjB,IAAI,CAAC0B,SAAL,CAAe,CAAf,EAAiBP,OAAjB,CAAP,CADW;EAEd;;EAED,QAAGF,IAAH,EAAQ;EACJQ,MAAAA,OAAO,CAACR,IAAI,CAAC3C,MAAN,CAAP,CADI;;EAEJ0C,MAAAA,KAAK,CAACC,IAAD,CAAL;EACH;EACJ;;EAED,WAASQ,OAAT,CAAiBE,CAAjB,EAAmB;EACf3B,IAAAA,IAAI,GAAGA,IAAI,CAAC0B,SAAL,CAAeC,CAAf,CAAP;EACH,GAjF2B;;;EAmF5B,WAASL,cAAT,GAAyB;EACrB,QAAMX,KAAK,GAAGX,IAAI,CAACwB,KAAL,CAAW9B,YAAX,CAAd;;EACA,QAAGiB,KAAH,EAAS;EACL,UAAMa,KAAK,GAAG;EACVnB,QAAAA,OAAO,EAAEM,KAAK,CAAC,CAAD,CADJ;EAEVL,QAAAA,KAAK,EAAE;EAFG,OAAd;EAKAmB,MAAAA,OAAO,CAACd,KAAK,CAAC,CAAD,CAAL,CAASrC,MAAV,CAAP;;EACA,UAAIwC,IAAJ,EAAQc,IAAR,CAPK;;;EASL,aAAM,EAAEd,IAAG,GAAGd,IAAI,CAACwB,KAAL,CAAW1B,aAAX,CAAR,MAAuC8B,IAAI,GAAG5B,IAAI,CAACwB,KAAL,CAAW3B,SAAX,CAA9C,CAAN,EAA2E;EACvE4B,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQtD,MAAT,CAAP;EACAkD,QAAAA,KAAK,CAAClB,KAAN,CAAYO,IAAZ,CAAiB;EACbgB,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CADG;EAEb3D,UAAAA,KAAK,EAAE2D,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAFpB,SAAjB,EAFuE;EAOvE;EACH;;EACD,UAAGd,IAAH,EAAO;EACHW,QAAAA,OAAO,CAACX,IAAG,CAAC,CAAD,CAAH,CAAOxC,MAAR,CAAP;EACA,eAAOkD,KAAP;EACH;EACJ;EACJ;;EAED,SAAOvB,IAAP;EACH;;ECxJM,SAAS6B,kBAAT,CAA4BC,QAA5B,EAAqC;EAExC,MAAIC,GAAG,GAAGjC,UAAU,CAACgC,QAAD,CAApB,CAFwC;;EAGxCvE,EAAAA,OAAO,CAACC,GAAR,CAAYuE,GAAZ;EACH;;ECHM,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;EAC1BA,EAAAA,GAAG,CAACvF,SAAJ,CAAcwF,KAAd,GAAsB,UAASC,OAAT,EAAiB;EACnC;EACA,QAAMrD,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcmD,OAAd,CAHmC;;EAKnCtD,IAAAA,SAAS,CAACC,EAAD,CAAT;;EAEA,QAAGA,EAAE,CAACE,QAAH,CAAYoD,EAAf,EAAkB;EACd,WAAKC,MAAL,CAAYvD,EAAE,CAACE,QAAH,CAAYoD,EAAxB;EACH;EACJ,GAVD;;EAYAH,EAAAA,GAAG,CAACvF,SAAJ,CAAc2F,MAAd,GAAuB,UAASD,EAAT,EAAY;EAC/BA,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAT,CAAuBH,EAAvB,CAAL;EACA,QAAMtD,EAAE,GAAG,IAAX;EACA,QAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EAEA,QAAG,CAACD,IAAI,CAACyD,MAAT,EAAgB;EACZ,UAAIV,QAAQ,GAAG/C,IAAI,CAAC+C,QAApB;;EACA,UAAG,CAACA,QAAD,IAAaM,EAAhB,EAAmB;EACfN,QAAAA,QAAQ,GAAGM,EAAE,CAACK,SAAd,CADe;EAElB;;EAED,UAAMD,MAAM,GAAGX,kBAAkB,CAACC,QAAD,CAAjC,CANY;;EAQZ/C,MAAAA,IAAI,CAACyD,MAAL,GAAcA,MAAd;EACH,KAd8B;;EAkBlC,GAlBD;EAmBH;;ECjCD,SAASP,GAAT,CAAaE,OAAb,EAAqB;EACjB;EACA,OAAKD,KAAL,CAAWC,OAAX,EAFiB;;EAGpB;;;EAEDH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}